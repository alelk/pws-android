import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

android {
    signingConfigs {
        releaseSignConfig {
            keyAlias 'pws'
            keyPassword '1234eaea'
            storeFile file('/home/alex/Projects/pws/pws keystore/alelk-keystrore.jks')
            storePassword '1234eaea'
        }
    }
    compileSdkVersion 25
    buildToolsVersion '25.0.3'
    defaultConfig {
        applicationId "com.alelk.pws.pwapp"
        resValue "string", "db_authority", "com.alelk.pws.database"
        resValue "string", "db_searchable_psalm_suggest", "content://com.alelk.pws.database/psalms"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 11
        versionName '1.1.1'
        versionNameSuffix '-' + getDate().toLowerCase()
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseSignConfig
        }
        debug {
            debuggable true
            minifyEnabled false
            versionNameSuffix "-debug"
        }
    }
    sourceSets {
        main { assets.srcDirs = ['src/main/assets'] }
    }
    productFlavors {
        ru {

        }
        uk {
            applicationIdSuffix ".uk"
            versionNameSuffix "-uk"
            resValue "string", "db_authority", "com.alelk.pws.database.uk"
        }
        full {
            applicationIdSuffix ".full"
            versionNameSuffix "-full"
            resValue "string", "db_authority", "com.alelk.pws.database.full"
        }
    }
    applicationVariants.all { variant ->
        variant.resValue "string", "versionName", variant.versionName
    }
    compileOptions {
       // sourceCompatibility JavaVersion.VERSION_1_8
       // targetCompatibility JavaVersion.VERSION_1_8
    }
}

static def getDate() {
    def df = new SimpleDateFormat("MMM-d-yyyy", new Locale("en_EN"))
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(new Date())
}

configurations {
    ruDebugCompile
    ruReleaseCompile
    ukDebugCompile
    ukReleaseCompile
    fullDebugCompile
    fullReleaseCompile
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    ruDebugCompile project(path: ':database', configuration: 'ruDebug')
    ruReleaseCompile project(path: ':database', configuration: 'ruRelease')
    ukDebugCompile project(path: ':database', configuration: 'ukDebug')
    ukReleaseCompile project(path: ':database', configuration: 'ukRelease')
    fullDebugCompile project(path: ':database', configuration: 'fullDebug')
    fullReleaseCompile project(path: ':database', configuration: 'fullRelease')
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
}
